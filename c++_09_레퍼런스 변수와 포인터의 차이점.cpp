/*레퍼런스는 포인터와 달리, 사용할 때 주소값의 개념을 생각하지 않습니다. 다음 예제를 보면,
int a = 10;
int* pa = &a;
int& ra = a;
*pa = 20;
ra = 30;
pa는 포인터이기 때문에 pa에 집어넣는 값은 반드시 주소값이 되어야 합니다.
그래서 pa에는 a가 아닌 &a를 집어넣는 거죠.
하지만 ra는 a를 가리키는 레퍼런스이기 때문에, 주소값을 따지지 않고 그냥 a라고만 써줘야 하는겁니다.
pa가 가리키는 변수에 20이라는 값을 대입하려는 상황도 마찬가지로, 
pa에는 주소값이 담겨있기에* pa라고 써줘야 pa가 가리키고 있는 a라는 변수와 같은 말이 됩니다.
반면 ra는 a를 가리키는 레퍼런스이므로, 그냥 a를 쓰듯이 ra라고 쓰면 되는거죠.*/

/*r-value는 주로 임시 객체라는 것을 가리킬 때 사용하는데, 이것에 대해서는 훨씬 뒤에 가서 나옵니다. 
지금은 그냥 '바꿀수 없는 값'을 저장할 때 쓴다 정도만 알아두시면 됩니다.*/

//https://www.youtube.com/watch?v=lv5K2fF2LuM&list=PLlJhQXcLQBJqywc5dweQ75GBRubzPxhAk&index=56